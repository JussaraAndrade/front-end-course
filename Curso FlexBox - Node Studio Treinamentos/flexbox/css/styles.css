.container {
    background-color: #ccc;
    height: 500px;
    /*Defini um container como flex */
    display: flex;

/*==============================================================================================*/
    /* 
        Por padrão ele assume row.
        - row (valor padrão); defini em linha
        - column; defini em coluna
        - row-reverse; defini os itens em linha só de forma reversa
        - column-reverse; defini em coluna só que em ordem reversa

        column | row-reverse | column-reverse | row
    */
    /*Defini a direção dos itens.*/
    flex-direction: row;

/*==============================================================================================*/
    
/*Defini se os itens vão ter uma quebra de linha ou não
        - nowrap (valor padrão); não permite quebra de linha
        - wrap; permite quebra de linha
        - wrap-reverse; vai permitir quebra de linha vai rederizar de forma reversa

        nowrap | wrap | wrap-reverse
    */
    flex-wrap: nowrap;

/*==============================================================================================*/
    /*Defini os valores flex-direction e do flex-wrap */
    /* flex-flow: row nowrap; */

/*==============================================================================================*/
    /*
    Alinhamento horizontal
        
    - flex-start (valor padrão); vai alinhar os itens da esquerda pra direta
    - flex-end; vai alinhar os itens da direta pra esquerda
    - center; alinha os itens no centro
    - space-between; vai criar um espaçamento entre os itens
    - space-around; cria um espaçamento entre eles, só que eles cria 
    espaçamento iguais incluse nos itens que estão nas extremidades.

    flex-end | center | space-between | space-around | flex-start
    */
    justify-content: flex-start;

/*==============================================================================================*/

    /* É responsavel em fazer um alinhamento vertical 
        - stretch (valor padrão); defini que os itens cresçam igualmente.
        - flex-start; vai alinhar os itens no topo, ele faz um alinhamento vertical.
        - flex-end; vai alinhar os itens na base do container.
        - center; vai alinhar os itens no centro do container
        - baseline; vai fazer o alinhamento vertical, baseado no conteúdo de cada item

        flex-start | flex-end | center | baseline | stretch
    */
    align-items: stretch;
/*==============================================================================================*/
    /*
        Fazer um alinhamento vertical

        Lembrando - ele vai fazer um alinhamento vertical quando itens estiverem em multi-line,
        ou seja, quando tiver uma quebra.

        - flex-start; vai fazer alinhamento vertical dos itens mesmo com a quebra de linha, vai
        fazer o alinhamento na parte de cima do container.
        - flex-end; vai fazer um alinhamento na base. 
        - center; vai fazer um alinhamento centralizado
        - space-between; vai adicionar um espaçamento entre as linhas
        - space-around; vai criar os mesmos espaçamentos, vai adicionar espaçamento na parte superior e na base
        - stretch; é um valor padrão faz com que os itens cresça igualmente na vertical 

        flex-start | flex-end | center | space-between | space-around | stretch

        Obs: para o stretch funcionar tem que remover altura do item: height: 30px;
    */
    align-content: flex-start;

}

.item {
    background-color: #333;
    color: #fff;
    padding: 20px;
    margin: 5px;
    height: 30px;

    /* propriedade importante

        flex-grow; o valor padrão dela é 0. Essa propriedade está relacionado com a largura desses itens.
        Acabou de dizer que todos os items tem o flex

         flex-grow: 1;
    */
   

    /*flex-shrink; está relacionado com a capacidade de redução do item
         flex-shrink: 1;
    */
   

    /* flex-basis;  largura inicial dos itens
         flex-basis: 300px;
    */
   

    /*flex; forma resumida de escrever essas três propriedades:
        - flex-grow: 1;
        - flex-shrink: 1;
        - flex-basis: 300px;
    */
    flex: 1 1 300px;
    
}

/*
    Anotações:

    Tiver um pouco de dificuldade em entender, começa a pensar no conceito de colunas

*/


.article-01 {
    /* 
        order; serve para alterar as ordens dos itens 
    */

    /* o article 1 irá ocupar 3 vezes mais o espaço extra do que os outros itens  */
  flex-shrink: 3;
    
}
.article-02 {
    
    /* 
        align-self; serve pra defini alinhamento individual do item 
        - center; fez um alinhamento vertical no centro
        - valor padrão é o auto que vai respeitar o que for definido dentro do algin-item no container
        
        flex-end | baseline | center | flex-start | strecth | auto
    */
    
    
}
.article-03 {
  
}
.article-04 {
 
}